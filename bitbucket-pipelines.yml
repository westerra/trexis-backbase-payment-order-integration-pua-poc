# Prerequisites: pom.xml and appropriate project structure should exist in the repository.

image:
  name: finiteapi.jfrog.io/trexis-docker/build-image:latest
  username: $FINITE_JFROG_USERNAME
  password: $FINITE_JFROG_PASSWORD

clone:
  depth: full

definitions:
  caches:
    sonar: ~/.sonar/cache  # Caching SonarCloud artifacts will speed up your build
    custom-maven: /root/.m2/repository  # Caching the actual project for faster builds
  steps:
    - step: &install
        name: Install
        caches:
          - sonar
          - custom-maven
        script:
          #Build project with tests
          - mvn install --batch-mode --file pom.xml -Dmaven.repo.local=/root/.m2/repository
          #Sonar Scan
          - mvn -B sonar:sonar -Dsonar.java.coveragePlugin=jacoco -Dsonar.organization=trexis
    - step: &deploy
        name: Deploy
        caches:
          - sonar
          - custom-maven
        script:
          #Build project with tests
          - mvn deploy --batch-mode --file pom.xml -Dmaven.repo.local=/root/.m2/repository  -PcodeCoverage
          #Sonar Scan
          - mvn -B sonar:sonar -Dsonar.java.coveragePlugin=jacoco -Dsonar.organization=trexis
    - step: &security
        name: Security Scan
        script:
          # Run a security scan for sensitive data.
          # See more security tools at https://bitbucket.org/product/features/pipelines/integrations?&category=security
          - pipe: atlassian/git-secrets-scan:0.5.1
    - step: &slack
        name: Slack Notification
        script:
          - BUILD_STATUS="successful"
          - if [[ $BITBUCKET_EXIT_CODE -ne 0 ]]; then BUILD_STATUS="failed" ; fi
          - pipe: atlassian/slack-notify:2.0.0
            variables:
              WEBHOOK_URL: $EXPERTS_SLACK_WEBHOOK_URL
              MESSAGE: '[$BITBUCKET_REPO_FULL_NAME] build has exited with status $BUILD_STATUS. https://sonarcloud.io/dashboard?id=trexis_$BITBUCKET_REPO_SLUG&branch=$BITBUCKET_BRANCH'

pipelines:
  branches:
    master:
      - parallel:
          - step: *deploy
          - step: *security
      - step: *slack
    feature/*:
      - parallel:
          - step: *install
          - step: *security
